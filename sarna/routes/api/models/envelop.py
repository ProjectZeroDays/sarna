# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from sarna.routes.api.models.base_model_ import Model
from sarna.routes.api.models.error import Error  # noqa: F401,E501
from sarna.routes.api import util


class Envelop(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, data: object=None, error: Error=None):  # noqa: E501
        """Envelop - a model defined in Swagger

        :param data: The data of this Envelop.  # noqa: E501
        :type data: object
        :param error: The error of this Envelop.  # noqa: E501
        :type error: Error
        """
        self.swagger_types = {
            'data': object,
            'error': Error
        }

        self.attribute_map = {
            'data': 'data',
            'error': 'error'
        }

        self._data = data
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'Envelop':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Envelop of this Envelop.  # noqa: E501
        :rtype: Envelop
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> object:
        """Gets the data of this Envelop.


        :return: The data of this Envelop.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data: object):
        """Sets the data of this Envelop.


        :param data: The data of this Envelop.
        :type data: object
        """

        self._data = data

    @property
    def error(self) -> Error:
        """Gets the error of this Envelop.


        :return: The error of this Envelop.
        :rtype: Error
        """
        return self._error

    @error.setter
    def error(self, error: Error):
        """Sets the error of this Envelop.


        :param error: The error of this Envelop.
        :type error: Error
        """

        self._error = error
