openapi: 3.0.1
info:
  title: "SARNA API"
  version: "1.0.0"
  description: "API of SARNA (https://github.com/rsrdesarrollo/sarna/)"
  contact:
    email: "rsrdesarrollo@gmail.com"
  license:
    name: "GPLv3"
    url: "https://www.gnu.org/licenses/gpl.txt"
servers:
- url: http://localhost:5000/api/v1
  description: Development Server

tags:
- name: client
  description: "Everything about your clients"
- name: finding
  description: "Access Finding database"
- name: assessment
  description: "Operate with assessments"
- name: user
  description: "System Users"

security:
- bearerAuth: []

paths:
  /client:
    post:
      tags:
      - client
      summary: "Create a new client"
      operationId: createClient
      requestBody:
        description: The client to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequestBody'
      responses:
        403:
          $ref: '#/components/responses/Forbidden'
        201:
          description: "Client data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Envelop'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Client'
    get:
      tags:
      - client
      summary: "Get a list of clients"
      operationId: getClients
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
      responses:
        200:
          description: "List of clients"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Client'
  /client/{client_id}:
    patch:
      tags:
      - client
      summary: "Modify client"
      operationId: modifyClient
      parameters:
      - $ref: '#/components/parameters/client_id'
      requestBody:
        description: The client to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequestBody'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
    get:
      tags:
      - client
      summary: Get client data
      operationId: getClient
      parameters:
      - $ref: '#/components/parameters/client_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: "Client data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Envelop'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Client'
    delete:
      tags:
      - client
      summary: Delete client
      operationId: deleteClient
      parameters:
      - $ref: '#/components/parameters/client_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'

  /client/{client_id}/assessment:
    post:
      tags:
      - client
      summary: "Create a new assessment for client"
      operationId: createAssessment
      parameters:
      - $ref: '#/components/parameters/client_id'

      requestBody:
        description: The assessment to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestBody'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        201:
          description: "Client Assessment data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Envelop'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Assessment'
    get:
      tags:
      - client
      summary: Get list of assessment of the client
      operationId: getClientAssessments
      parameters:
      - $ref: '#/components/parameters/client_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: "Client Assessments data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Assessment'
  /client/{client_id}/template:
    get:
      tags:
      - client
      summary: Get list of assessment of the client
      operationId: getClientTemplates
      parameters:
      - $ref: '#/components/parameters/client_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: "Client Assessments data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Template'
    post:
      tags:
      - client
      summary: Add template to client
      operationId: addClientTemplate
      parameters:
      - $ref: '#/components/parameters/client_id'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
                properrties:
                  info[]:
                    type: array
                    itmes:
                      $ref: '#/components/schemas/Template'
                  file[]:
                    type: array
                    items:
                      type: string
                      format: binary
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
  /client/{client_id}/template/{filename}:
    get:
      tags:
      - client
      summary: Download Client template
      operationId: getClientTemplate
      parameters:
      - $ref: '#/components/parameters/client_id'
      - $ref: '#/components/parameters/filename'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: File data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    delete:
      tags:
      - client
      summary: Delete template from client
      operationId: deleteClientTemplate
      parameters:
      - $ref: '#/components/parameters/client_id'
      - $ref: '#/components/parameters/filename'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'

  /assessment:
    get:
      tags:
      - assessment
      summary: "Get a list of assessments"
      operationId: getAssessments
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
      responses:
        200:
          description: "List of assessments"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Assessment'
  /assessment/{assessment_id}:
    get:
      tags:
      - assessment
      summary: Get assessment data
      operationId: getAssessment
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: "Assessment data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Envelop'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Assessment'
    delete:
      tags:
      - assessment
      summary: Delete Assessment
      operationId: deleteAssessment
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
  /assessment/{assessment_id}/findig:
    post:
      tags:
      - assessment
      summary: "Add a new finding to the assessment"
      operationId: addAssessmentFinding
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      requestBody:
        description: The finding to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingRequestBody'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        201:
          description: "Finding data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Envelop'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Finding'
    get:
      tags:
      - assessment
      summary: "Get a list of findings in assessment"
      operationId: getAssessmentFindingis
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
      responses:
        200:
          description: "List of Findings"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Finding'
  /assessment/{assessment_id}/findig/{finding_id}:
    delete:
      tags:
      - assessment
      summary: Delete Assessment Finding
      operationId: deleteAssessmentFinding
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      - $ref: '#/components/parameters/finding_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
    patch:
      tags:
      - assessment
      summary: "Edit finding in the assessment"
      operationId: editAssessmentFinding
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      - $ref: '#/components/parameters/finding_id'
      requestBody:
        description: The finding to be edited.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingRequestBody'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: "Finding data"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Envelop'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Finding'
  /assessment/{assessment_id}/image:
    get:
      tags:
      - assessment
      summary: Get list of images
      operationId: getAssessmentImages
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: "List of Images"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Image'
    post:
      tags:
      - assessment
      summary: Add evidence to assessment
      operationId: addAssessmentImage
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Image'
              - type: object
                properties:
                  file:
                    type: string
                    format: binary
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
  /assessment/{assessment_id}/image/{filename}:
    get:
      tags:
      - assessment
      summary: Download assessment image
      operationId: getAssessmentImage
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      - $ref: '#/components/parameters/filename'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        200:
          description: File data
          content:
            image/*:
              schema:
                type: string
                format: binary
    delete:
      tags:
      - assessment
      summary: Delete Assessment image
      operationId: deleteAssessmentImage
      parameters:
      - $ref: '#/components/parameters/assessment_id'
      - $ref: '#/components/parameters/filename'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
  #/assessment/{assessment_id}/asset:
  #/assessment/{assessment_id}/asset/{asset_id}:
  #/assessment/{assessment_id}/asset/{asset_id}/resource:
  /findign:
    get:
      tags:
      - finding
      summary: "Get a list of finding templates"
      operationId: getFindignTemplates
      parameters:
      - in: query
        $ref: '#/components/parameters/page'
      - in: query
        $ref: '#/components/parameters/page_size'
      responses:
        200:
          description: "List of Finding Templates"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      items:
                        $ref: '#/components/schemas/FindingTemplate'

  /finding/{finding_id}:
    delete:
      tags:
      - assessment
      summary: Delete Finding Template
      operationId: deleteFindingTemplate
      parameters:
      - $ref: '#/components/parameters/finding_id'
      responses:
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
        204:
          $ref: '#/components/responses/NoContent'
  #TODO: Implement API
  #/finding/{finding_id}/solution:
  #/finding/{finding_id}/solution/{solution_name}:
  #/finding/{finding_id}/translation:
  #/finding/{finding_id}/translation/{lang}:
  /user:
    get:
      tags:
      - user
      summary: "Get a list of Users"
      operationId: getUsers
      parameters:
      - in: query
        $ref: '#/components/parameters/page'
      - in: query
        $ref: '#/components/parameters/page_size'
      responses:
        200:
          description: "List of Users"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEnvelop'
                - type: object
                  properties:
                    data:
                      items:
                        $ref: '#/components/schemas/User'
  #TODO: Implement API
  #/user/{username}:

components:
  parameters:
    filename:
      name: filename
      in: path
      description: Filename
      required: true
      schema:
        type: string
    username:
      name: username
      in: path
      description: User ID
      required: true
      schema:
        type: string
    finding_id:
      name: finding_id
      in: path
      description: Finding ID
      required: true
      schema:
        type: integer
    assessment_id:
      name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    client_id:
      name: client_id
      in: path
      description: Client ID
      required: true
      schema:
        type: integer
    page_size:
      name: page_size
      in: query
      description: Number of items returned
      schema:
        type: integer
        minimum: 10
        maximum: 100
        multipleOf: 10
        default: 10
    page:
      name: page
      in: query
      description: Number of page
      schema:
        type: integer
        minimum: 0
        default: 0
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Envelop'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Envelop'
    NoContent:
      description: No Content
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: sarna.core.auth.bearer_token_info

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message

    Envelop:
      type: object
      properties:
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
    PaginatedEnvelop:
      type: object
      properties:
        total:
          type: integer
          description: "Number of items"
          example: 3212
        page_size:
          type: integer
          description: "number of items per page"
          example: 10
        page:
          type: integer
          description: "Current page number"
          example: 0
        error:
          $ref: '#/components/schemas/Error'
        data:
          type: array
          items:
            type: object

    ## ENUMS
    ########
    UserType:
      type: string
      example: "manager"
      enum: [manager, auditor, trusted_auditor, admin]
    AssessmentType:
      type: string
      example: "Web"
      enum: [Web, External_pentest, Mobile, iOS, Android, WiFi]
    AssessmentStatus:
      type: string
      example: "Open"
      enum: [Open, Closed, Archived]
    FindingType:
      type: string
      example: "Web"
      enum: [Web, Infra, Mobile, WiFi]
    FindingStatus:
      type: string
      example: "Pending"
      enum: [Pending, Reviewed, Confirmed, False_Positive, Other]
    Language:
      type: string
      example: Spanish
      enum: [Spanish, English]
    Score:
      type: string
      example: Low
      enum: [Info, Low, Medium, High, Critical, NA]
    OWASPMobileTop10Category:
      type: string
      example: "M1"
      enum: [M1, M2, M3, M4, M5, M6, M7, M8, M9, M10]
    OWISAMCategory:
      type: string
      example: "DI-001"
      enum: [DI_001, DI_002, DI_003, DI_004, DI_005, DI_006, FP_001, FP_002, FP_003, FP_004, FP_005, FP_006, AU_001,
             AU_002, AU_003, AU_004, AU_005, AU_006, AU_007, AU_008, CP_001, CP_002, CP_003, CP_004, CP_005, CP_006,
             CF_001, CF_002, CF_003, CF_004, CF_005, CF_006, IF_001, IF_002, IF_003, IF_004, IF_005, IF_006, IF_007,
             IF_008, IF_009, IF_010, DS_001, DS_002, DS_003, DS_004, DS_005, GD_001, GD_002, GD_003, GD_004, GD_005,
             GD_006, CT_001, CT_002, CT_003, CT_004, CT_005, CT_006, CT_007, HS_001, HS_002, HS_003, HS_004]
    OWASPCategory:
      type: string
      example: 'OTG-INFO-001'
      enum: [OTG_INFO_001, OTG_INFO_002, OTG_INFO_003, OTG_INFO_004, OTG_INFO_005, OTG_INFO_006, OTG_INFO_007,
             OTG_INFO_008, OTG_INFO_009, OTG_INFO_010, OTG_CONFIG_001, OTG_CONFIG_002, OTG_CONFIG_003, OTG_CONFIG_004,
             OTG_CONFIG_005, OTG_CONFIG_006, OTG_CONFIG_007, OTG_CONFIG_008, OTG_IDENT_001, OTG_IDENT_002,
             OTG_IDENT_003, OTG_IDENT_004, OTG_IDENT_005, OTG_IDENT_006, OTG_IDENT_007, OTG_AUTHN_001, OTG_AUTHN_002,
             OTG_AUTHN_003, OTG_AUTHN_004, OTG_AUTHN_005, OTG_AUTHN_006, OTG_AUTHN_007, OTG_AUTHN_008, OTG_AUTHN_009,
             OTG_AUTHN_010, OTG_AUTHZ_001, OTG_AUTHZ_002, OTG_AUTHZ_003, OTG_AUTHZ_004, OTG_SESS_001, OTG_SESS_002,
             OTG_SESS_003, OTG_SESS_004, OTG_SESS_005, OTG_SESS_006, OTG_SESS_007, OTG_SESS_008, OTG_INPVAL_001,
             OTG_INPVAL_002, OTG_INPVAL_003, OTG_INPVAL_004, OTG_INPVAL_005, OTG_INPVAL_006, OTG_INPVAL_007,
             OTG_INPVAL_008, OTG_INPVAL_009, OTG_INPVAL_010, OTG_INPVAL_011, OTG_INPVAL_012, OTG_INPVAL_013,
             OTG_INPVAL_014, OTG_INPVAL_015, OTG_INPVAL_016, OTG_ERR_001, OTG_ERR_002, OTG_CRYPST_001, OTG_CRYPST_002,
             OTG_CRYPST_003, OTG_BUSLOGIC_001, OTG_BUSLOGIC_002, OTG_BUSLOGIC_003, OTG_BUSLOGIC_004, OTG_BUSLOGIC_005,
             OTG_BUSLOGIC_006, OTG_BUSLOGIC_007, OTG_BUSLOGIC_008, OTG_BUSLOGIC_009, OTG_CLIENT_001, OTG_CLIENT_002,
             OTG_CLIENT_003, OTG_CLIENT_004, OTG_CLIENT_005, OTG_CLIENT_006, OTG_CLIENT_007, OTG_CLIENT_008,
             OTG_CLIENT_009, OTG_CLIENT_010, OTG_CLIENT_011, OTG_CLIENT_012]

    ## FINDING TEMPLATES
    ####################
    FindingTemplateBase:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: "xss-vulne-stored"
          maxLength: 64
    FindingTemplateResume:
      allOf:
      - $ref: '#/components/schemas/FindingTemplateBase'
      - type: object
        properties:
          id:
            type: integer
            example: 1
    FindingTemplateCreate:
      allOf:
      - $ref: '#/components/schemas/FindingTemplateBase'
      - type: object
        required:
        - type
        - tech_risk
        - business_risk
        - exploitability
        - dissemination
        - solution_complexity
        - lang
        - title
        - definition
        - references
        properties:
          type:
            $ref: '#/components/schemas/FindingType'
          owasp_category:
            $ref: '#/components/schemas/OWASPCategory'
          owasp_mobile_category:
            $ref: '#/components/schemas/OWASPMobileTop10Category'
          owisam_category:
            $ref: '#/components/schemas/OWISAMCategory'
          tech_risk:
            $ref: '#/components/schemas/Score'
          business_risk:
            $ref: '#/components/schemas/Score'
          exploitability:
            $ref: '#/components/schemas/Score'
          dissemination:
            $ref: '#/components/schemas/Score'
          solution_complexity:
            $ref: '#/components/schemas/Score'
          lang:
            $ref: '#/components/schemas/Language'
          title:
            type: string
            maxLength: 128
          definition:
            type: string
          references:
            type: string
          description:
            type: string
    FindingTemplate:
      allOf:
      - $ref: '#/components/schemas/FindingTemplateBase'
      - type: object
        required:
        - type
        - tech_risk
        - business_risk
        - exploitability
        - dissemination
        - solution_complexity
        properties:
          type:
            $ref: '#/components/schemas/FindingType'
          owasp_category:
            $ref: '#/components/schemas/OWASPCategory'
          owasp_mobile_category:
            $ref: '#/components/schemas/OWASPMobileTop10Category'
          owisam_category:
            $ref: '#/components/schemas/OWISAMCategory'
          tech_risk:
            $ref: '#/components/schemas/Score'
          business_risk:
            $ref: '#/components/schemas/Score'
          exploitability:
            $ref: '#/components/schemas/Score'
          dissemination:
            $ref: '#/components/schemas/Score'
          solution_complexity:
            $ref: '#/components/schemas/Score'
          creator:
            $ref: '#/components/schemas/User'

    FindingBase:
      type: object
      properties:
        title:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/FindingStatus'
        type:
          $ref: '#/components/schemas/FindingType'
        owasp_category:
          $ref: '#/components/schemas/OWASPCategory'
        owasp_mobile_category:
          $ref: '#/components/schemas/OWASPMobileTop10Category'
        owisam_category:
          $ref: '#/components/schemas/OWISAMCategory'
        tech_risk:
          $ref: '#/components/schemas/Score'
        business_risk:
          $ref: '#/components/schemas/Score'
        exploitability:
          $ref: '#/components/schemas/Score'
        dissemination:
          $ref: '#/components/schemas/Score'
        solution_complexity:
          $ref: '#/components/schemas/Score'

    FindingResume:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          maxLength: 60
        title:
          type: string
          maxLength: 128

    FindingRequestBody:
      allOf:
      - $ref: '#/components/schemas/FindingBase'
      - type: object
        properties:
          template:
            type: string
            example: "xss-vulne-stored"
            maxLength: 64

    Finding:
      allOf:
      - $ref: '#/components/schemas/FindingBase'
      - type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            maxLength: 60
          template:
            $ref: '#/components/schemas/FindingTemplateResume'
          description:
            type: string
          solution:
            type: string
          definition:
            type: string
          references:
            type: string

          cvss_v3_vector:
            type: string
            maxLength: 128

    AffectedResource:
      type: object
      properties:
        route:
          type: string
          maxLength: 256
        findings:
          $ref: '#/components/schemas/FindingResume'

    Active:
      type: object
      properties:
        name:
          type: string
        active_resources:
          type: array
          items:
            $ref: '#/components/schemas/AffectedResource'

    Image:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
      required:
      - name

    ## CLIENTS
    ##########
    ClientBase:
      type: object
      required:
      - short_name
      - long_name
      properties:
        short_name:
          type: string
          example: "ACME"
          maxLength: 64
        long_name:
          type: string
          example: "ACME Global Corp Inc."
          maxLength: 128
    ClientRequestBody:
      allOf:
      - $ref: '#/components/schemas/ClientBase'
      - type: object
        properties:
          managers:
            type: array
            items:
              $ref: '#/components/schemas/UserName'
    Client:
      allOf:
      - $ref: '#/components/schemas/ClientBase'
      - type: object
        required:
        - id
        properties:
          id:
            type: integer
            example: 1
          creator:
            $ref: '#/components/schemas/User'
          managers:
            type: array
            items:
              $ref: '#/components/schemas/User'
    Template:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: "MY TEMPLATE"
          maxLength: 25
        description:
          type: string
          example: "This is the template description"
          maxLength: 128

    ## ASSESSMENT
    #############
    AssessmentBase:
      type: object
      properties:
        name:
          type: string
          example: "assessment-1"
          maxLength: 64
        platform:
          type: string
          example: "example.com"
          maxLength: 64
        lang:
          $ref: '#/components/schemas/Language'
        type:
          $ref: '#/components/schemas/AssessmentType'
        status:
          $ref: '#/components/schemas/AssessmentStatus'
    AssessmentRequestBody:
      allOf:
      - $ref: '#/components/schemas/AssessmentBase'
      - type: object
        properties:
          auditors:
            type: array
            items:
              $ref: '#/components/schemas/UserName'
    Assessment:
      allOf:
      - $ref: '#/components/schemas/AssessmentBase'
      - type: object
        properties:
          id:
            type: integer
            example: 1
          creator:
            $ref: '#/components/schemas/User'
          auditors:
            type: array
            items:
              $ref: '#/components/schemas/User'
          creation_date:
            type: string
            format: date-time

    ## USERS
    ########
    UserName:
      type: string
      example: "username"
      maxLength: 128
    User:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/UserName'
        user_type:
          $ref: '#/components/schemas/UserType'
      required:
      - username
